<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d31f5ae4-e33a-4d6a-98e1-6dfae29bfe8a" name="Changes" comment="test(execution): Implement tests to know execution in a stream can run sequentially and parallel" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="importingSettings">
      <MavenImportingSettings>
        <option name="workspaceImportEnabled" value="true" />
      </MavenImportingSettings>
    </option>
  </component>
  <component name="ProjectId" id="2VvXMJVyX0XyEXqDbRHtfKyRrKk" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="autoscrollToSource" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;SONARLINT_PRECOMMIT_ANALYSIS&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/Budel/TestFolder/Array/Person.java&quot;
  }
}</component>
  <component name="RunManager" selected="JUnit.StreamTest$ExecutionStreamTest.testStreamParallelExecution">
    <configuration name="StreamTest$CheckedStreamTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="belajar-java-stream" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="setianjay.stream.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="setianjay.stream.StreamTest" />
      <option name="MAIN_CLASS_NAME" value="setianjay.stream.StreamTest$CheckedStreamTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StreamTest$ExecutionStreamTest.testStreamParallelExecution" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="belajar-java-stream" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="setianjay.stream.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="setianjay.stream.StreamTest" />
      <option name="MAIN_CLASS_NAME" value="setianjay.stream.StreamTest$ExecutionStreamTest" />
      <option name="METHOD_NAME" value="testStreamParallelExecution" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StreamTest$ExecutionStreamTest.testStreamSequentiallyExecution" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="belajar-java-stream" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="setianjay.stream.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="setianjay.stream.StreamTest" />
      <option name="MAIN_CLASS_NAME" value="setianjay.stream.StreamTest$ExecutionStreamTest" />
      <option name="METHOD_NAME" value="testStreamSequentiallyExecution" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StreamTest$RetrievingStreamTest.testRetrieveStreamDataUsingDropWhile" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="belajar-java-stream" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="setianjay.stream.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="setianjay.stream.StreamTest" />
      <option name="MAIN_CLASS_NAME" value="setianjay.stream.StreamTest$RetrievingStreamTest" />
      <option name="METHOD_NAME" value="testRetrieveStreamDataUsingDropWhile" />
      <option name="TEST_OBJECT" value="method" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StreamTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="belajar-java-stream" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="setianjay.stream.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="PACKAGE_NAME" value="setianjay.stream" />
      <option name="MAIN_CLASS_NAME" value="setianjay.stream.StreamTest" />
      <option name="TEST_OBJECT" value="class" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="JUnit.StreamTest$ExecutionStreamTest.testStreamParallelExecution" />
        <item itemvalue="JUnit.StreamTest$ExecutionStreamTest.testStreamSequentiallyExecution" />
        <item itemvalue="JUnit.StreamTest$CheckedStreamTest" />
        <item itemvalue="JUnit.StreamTest" />
        <item itemvalue="JUnit.StreamTest$RetrievingStreamTest.testRetrieveStreamDataUsingDropWhile" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d31f5ae4-e33a-4d6a-98e1-6dfae29bfe8a" name="Changes" comment="" />
      <created>1695717484600</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1695717484600</updated>
    </task>
    <task id="LOCAL-00001" summary="Initial commit">
      <created>1695717837187</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1695717837187</updated>
    </task>
    <task id="LOCAL-00002" summary="test(create): Implement tests for the creation of a stream&#10;&#10;This test shows how to create empty stream, single stream, and nullable&#10;stream. It also shows how to create streams from arrays and lists.">
      <created>1696611063828</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1696611063828</updated>
    </task>
    <task id="LOCAL-00003" summary="test(create): Implement tests for the creation of a stream&#10;&#10;This test shows how to create empty stream, single stream, and nullable&#10;stream. It also shows how to create streams from arrays and lists.">
      <created>1696611413492</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1696611413492</updated>
    </task>
    <task id="LOCAL-00004" summary="test(creation): Implement tests for the creation of a stream&#10;&#10;This test shows how to create empty stream, single stream, and nullable&#10;stream. It also shows how to create streams from arrays and lists.">
      <created>1696611478738</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1696611478738</updated>
    </task>
    <task id="LOCAL-00005" summary="test(transformation): Implement tests to transform a stream or stream content into another form&#10;&#10;This test shows how to convert a stream or stream content into another&#10;form. For example, converting stream content that previously had an&#10;Integer data type into a String data type. And also can change the&#10;stream into a collection such as List, Set, and Map. However, this test&#10;only converts Stream to a Map collection.">
      <created>1696612052207</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1696612052207</updated>
    </task>
    <task id="LOCAL-00006" summary="test(transformation): Implement tests to transform a stream or stream content into another form&#10;&#10;This test shows how to convert a stream or stream content into another&#10;form. For example, converting stream content that previously had an&#10;Integer data type into a String data type. And also can change the&#10;stream into a collection such as List, Set, and Map. However, this test&#10;only converts Stream to a Map collection.">
      <created>1696613111128</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1696613111128</updated>
    </task>
    <task id="LOCAL-00007" summary="test(transformation): Implement tests to transform a stream or stream content into another form&#10;&#10;This test shows how to convert a stream or stream content into another&#10;form. For example, converting stream content that previously had an&#10;Integer data type into a String data type using map operation. And also&#10;can change the stream into a collection such as List, Set, and Map using&#10;collect operation. However, this test only converts Stream to a Map&#10;collection.">
      <created>1696613923427</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1696613923427</updated>
    </task>
    <task id="LOCAL-00008" summary="test(transformation): Implement tests to transform a stream or stream content into another form&#10;&#10;This test shows how to convert a stream or stream content into another&#10;form. For example, converting stream content that previously had an&#10;Integer data type into a String data type using map or flatMap&#10;operation. And also can change the stream into a collection such as&#10;List, Set, and Map using collect operation. However, this test only&#10;converts Stream to a Map collection.">
      <created>1696614038124</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1696614038124</updated>
    </task>
    <task id="LOCAL-00009" summary="test(filtering): Implement tests to filter the content in the stream based on the specified conditions&#10;&#10;This test shows how to filter the content in the stream using distinct,&#10;filter, groupingBy, and partitionBy operators.">
      <created>1696614499915</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1696614499915</updated>
    </task>
    <task id="LOCAL-00010" summary="test(filtering): Implement tests to filter the content in a stream based on the specified conditions&#10;&#10;This test shows how to filter the content in the stream using distinct,&#10;filter, groupingBy, and partitionBy operators.">
      <created>1696665264145</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1696665264145</updated>
    </task>
    <task id="LOCAL-00011" summary="test(retrieving): Implement tests to retrieve the content in a stream&#10;&#10;This test shows how to retrieve a content in a stream using limit,&#10;findAny, findFirst, takeWhile, and dropWhile operators.">
      <created>1696665428533</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1696665428533</updated>
    </task>
    <task id="LOCAL-00012" summary="test(sorting): Implement tests to sort the contents in a stream&#10;&#10;This test shows how to sort the content in a stream using the sorted&#10;operator, either with or without a comparator.">
      <created>1696665781911</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1696665781911</updated>
    </task>
    <task id="LOCAL-00013" summary="test(aggregation): Implement tests to aggregate the contents in a stream&#10;&#10;This test shows how to aggregate the content in a stream using min, max,&#10;average and reduce operators.">
      <created>1696668564729</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1696668564729</updated>
    </task>
    <task id="LOCAL-00014" summary="test(checking): Implement tests to check the contents in a stream&#10;&#10;This test shows how to check the contents in a stream using anyMatch,&#10;allMatch, and noneMatch operators.">
      <created>1696668757143</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1696668757143</updated>
    </task>
    <task id="LOCAL-00015" summary="test(execution): Implement tests to know execution in a stream can run sequentially and parallel">
      <created>1696671154395</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1696671154395</updated>
    </task>
    <option name="localTasksCounter" value="16" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Initial commit" />
    <MESSAGE value="test(create): Implement tests for the creation of a stream&#10;&#10;This test shows how to create empty stream, single stream, and nullable&#10;stream. It also shows how to create streams from arrays and lists." />
    <MESSAGE value="test(creation): Implement tests for the creation of a stream&#10;&#10;This test shows how to create empty stream, single stream, and nullable&#10;stream. It also shows how to create streams from arrays and lists." />
    <MESSAGE value="test(transformation): Implement tests to transform a stream or stream content into another form&#10;&#10;This test shows how to convert a stream or stream content into another&#10;form. For example, converting stream content that previously had an&#10;Integer data type into a String data type. And also can change the&#10;stream into a collection such as List, Set, and Map. However, this test&#10;only converts Stream to a Map collection." />
    <MESSAGE value="test(transformation): Implement tests to transform a stream or stream content into another form&#10;&#10;This test shows how to convert a stream or stream content into another&#10;form. For example, converting stream content that previously had an&#10;Integer data type into a String data type using map operation. And also&#10;can change the stream into a collection such as List, Set, and Map using&#10;collect operation. However, this test only converts Stream to a Map&#10;collection." />
    <MESSAGE value="test(transformation): Implement tests to transform a stream or stream content into another form&#10;&#10;This test shows how to convert a stream or stream content into another&#10;form. For example, converting stream content that previously had an&#10;Integer data type into a String data type using map or flatMap&#10;operation. And also can change the stream into a collection such as&#10;List, Set, and Map using collect operation. However, this test only&#10;converts Stream to a Map collection." />
    <MESSAGE value="test(filtering): Implement tests to filter the content in the stream based on the specified conditions&#10;&#10;This test shows how to filter the content in the stream using distinct,&#10;filter, groupingBy, and partitionBy operators." />
    <MESSAGE value="test(filtering): Implement tests to filter the content in a stream based on the specified conditions&#10;&#10;This test shows how to filter the content in the stream using distinct,&#10;filter, groupingBy, and partitionBy operators." />
    <MESSAGE value="test(retrieving): Implement tests to retrieve the content in a stream&#10;&#10;This test shows how to retrieve a content in a stream using limit,&#10;findAny, findFirst, takeWhile, and dropWhile operators." />
    <MESSAGE value="test(sorting): Implement tests to sort the contents in a stream&#10;&#10;This test shows how to sort the content in a stream using the sorted&#10;operator, either with or without a comparator." />
    <MESSAGE value="test(aggregation): Implement tests to aggregate the contents in a stream&#10;&#10;This test shows how to aggregate the content in a stream using min, max,&#10;average and reduce operators." />
    <MESSAGE value="test(checking): Implement tests to check the contents in a stream&#10;&#10;This test shows how to check the contents in a stream using anyMatch,&#10;allMatch, and noneMatch operators." />
    <MESSAGE value="test(execution): Implement tests to know execution in a stream can run sequentially and parallel" />
    <option name="LAST_COMMIT_MESSAGE" value="test(execution): Implement tests to know execution in a stream can run sequentially and parallel" />
  </component>
</project>